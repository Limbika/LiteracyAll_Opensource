package com.literacyall.app.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.literacyall.app.dao.User;
import com.literacyall.app.dao.TaskPack;
import com.literacyall.app.dao.Task;
import com.literacyall.app.dao.Item;
import com.literacyall.app.dao.Result;

import com.literacyall.app.dao.UserDao;
import com.literacyall.app.dao.TaskPackDao;
import com.literacyall.app.dao.TaskDao;
import com.literacyall.app.dao.ItemDao;
import com.literacyall.app.dao.ResultDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig taskPackDaoConfig;
    private final DaoConfig taskDaoConfig;
    private final DaoConfig itemDaoConfig;
    private final DaoConfig resultDaoConfig;

    private final UserDao userDao;
    private final TaskPackDao taskPackDao;
    private final TaskDao taskDao;
    private final ItemDao itemDao;
    private final ResultDao resultDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        taskPackDaoConfig = daoConfigMap.get(TaskPackDao.class).clone();
        taskPackDaoConfig.initIdentityScope(type);

        taskDaoConfig = daoConfigMap.get(TaskDao.class).clone();
        taskDaoConfig.initIdentityScope(type);

        itemDaoConfig = daoConfigMap.get(ItemDao.class).clone();
        itemDaoConfig.initIdentityScope(type);

        resultDaoConfig = daoConfigMap.get(ResultDao.class).clone();
        resultDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        taskPackDao = new TaskPackDao(taskPackDaoConfig, this);
        taskDao = new TaskDao(taskDaoConfig, this);
        itemDao = new ItemDao(itemDaoConfig, this);
        resultDao = new ResultDao(resultDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(TaskPack.class, taskPackDao);
        registerDao(Task.class, taskDao);
        registerDao(Item.class, itemDao);
        registerDao(Result.class, resultDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        taskPackDaoConfig.getIdentityScope().clear();
        taskDaoConfig.getIdentityScope().clear();
        itemDaoConfig.getIdentityScope().clear();
        resultDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public TaskPackDao getTaskPackDao() {
        return taskPackDao;
    }

    public TaskDao getTaskDao() {
        return taskDao;
    }

    public ItemDao getItemDao() {
        return itemDao;
    }

    public ResultDao getResultDao() {
        return resultDao;
    }

}
